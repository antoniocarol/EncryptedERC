/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeeERC20,
  FeeERC20Interface,
} from "../../../contracts/tokens/FeeERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimal",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "feeRates",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeCollectors",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals_",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bf6380380610bf683398101604081905261002f9161014e565b848484828260036100408382610284565b50600461004d8282610284565b50506005805460ff191660ff9390931692909217909155505050600691909155600780546001600160a01b0319166001600160a01b0390921691909117905550610342915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100bc57600080fd5b81516001600160401b038111156100d5576100d5610095565b604051601f8201601f19908116603f011681016001600160401b038111828210171561010357610103610095565b60405281815283820160200185101561011b57600080fd5b60005b8281101561013a5760208186018101518383018201520161011e565b506000918101602001919091529392505050565b600080600080600060a0868803121561016657600080fd5b85516001600160401b0381111561017c57600080fd5b610188888289016100ab565b602088015190965090506001600160401b038111156101a657600080fd5b6101b2888289016100ab565b945050604086015160ff811681146101c957600080fd5b6060870151608088015191945092506001600160a01b03811681146101ed57600080fd5b809150509295509295909350565b600181811c9082168061020f57607f821691505b60208210810361022f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561027f57806000526020600020601f840160051c8101602085101561025c5750805b601f840160051c820191505b8181101561027c5760008155600101610268565b50505b505050565b81516001600160401b0381111561029d5761029d610095565b6102b1816102ab84546101fb565b84610235565b6020601f8211600181146102e557600083156102cd5750848201515b600019600385901b1c1916600184901b17845561027c565b600084815260208120601f198516915b8281101561031557878501518255602094850194600190920191016102f5565b50848210156103335786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6108a5806103516000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb146101a2578063c415b95c146101b5578063dd62ed3e146101e0578063f785ef721461021957600080fd5b806370a082311461016857806395d89b4114610191578063978bbdb91461019957600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a57806340c10f1914610153575b600080fd5b6100dc610226565b6040516100e9919061069a565b60405180910390f35b610105610100366004610704565b6102b8565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b61010561013536600461072e565b6102d2565b60055460ff165b60405160ff90911681526020016100e9565b610166610161366004610704565b610345565b005b61011961017636600461076b565b6001600160a01b031660009081526020819052604090205490565b6100dc610353565b61011960065481565b6101056101b0366004610704565b610362565b6007546101c8906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b6101196101ee36600461078d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546101419060ff1681565b606060038054610235906107c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610261906107c0565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b5050505050905090565b6000336102c6818585610370565b60019150505b92915050565b60008033905060006064600654856102ea9190610810565b6102f49190610827565b905060006103028286610849565b905061030f878487610382565b61031a878783610406565b8115610338576007546103389088906001600160a01b031684610406565b5060019695505050505050565b61034f8282610465565b5050565b606060048054610235906107c0565b6000336102c6818585610406565b61037d838383600161049b565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561040057818110156103f157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6104008484848403600061049b565b50505050565b6001600160a01b03831661043057604051634b637e8f60e11b8152600060048201526024016103e8565b6001600160a01b03821661045a5760405163ec442f0560e01b8152600060048201526024016103e8565b61037d838383610570565b6001600160a01b03821661048f5760405163ec442f0560e01b8152600060048201526024016103e8565b61034f60008383610570565b6001600160a01b0384166104c55760405163e602df0560e01b8152600060048201526024016103e8565b6001600160a01b0383166104ef57604051634a1406b160e11b8152600060048201526024016103e8565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561040057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161056291815260200190565b60405180910390a350505050565b6001600160a01b03831661059b578060026000828254610590919061085c565b9091555061060d9050565b6001600160a01b038316600090815260208190526040902054818110156105ee5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103e8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661062957600280548290039055610648565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161068d91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106c857602081860181015160408684010152016106ab565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106ff57600080fd5b919050565b6000806040838503121561071757600080fd5b610720836106e8565b946020939093013593505050565b60008060006060848603121561074357600080fd5b61074c846106e8565b925061075a602085016106e8565b929592945050506040919091013590565b60006020828403121561077d57600080fd5b610786826106e8565b9392505050565b600080604083850312156107a057600080fd5b6107a9836106e8565b91506107b7602084016106e8565b90509250929050565b600181811c908216806107d457607f821691505b6020821081036107f457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102cc576102cc6107fa565b60008261084457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102cc576102cc6107fa565b808201808211156102cc576102cc6107fa56fea2646970667358221220797be4e440a9ca1601187f2a6b2c02827a1e1212c02ff81bb74429f89739d53564736f6c634300081b0033";

type FeeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeERC20__factory extends ContractFactory {
  constructor(...args: FeeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimal: BigNumberish,
    feeRates: BigNumberish,
    feeCollectors: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimal,
      feeRates,
      feeCollectors,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimal: BigNumberish,
    feeRates: BigNumberish,
    feeCollectors: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimal,
      feeRates,
      feeCollectors,
      overrides || {}
    ) as Promise<
      FeeERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeERC20__factory {
    return super.connect(runner) as FeeERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeERC20Interface {
    return new Interface(_abi) as FeeERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeERC20 {
    return new Contract(address, _abi, runner) as unknown as FeeERC20;
  }
}
