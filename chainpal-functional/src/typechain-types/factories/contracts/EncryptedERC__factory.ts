/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EncryptedERC,
  EncryptedERCInterface,
  CreateEncryptedERCParamsStruct,
} from "../../contracts/EncryptedERC";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isConverter",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "mintVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "withdrawVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "transferVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "burnVerifier",
            type: "address",
          },
        ],
        internalType: "struct CreateEncryptedERCParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidChainId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNullifier",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenBlacklisted",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownToken",
    type: "error",
  },
  {
    inputs: [],
    name: "UserNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAuditor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAuditor",
        type: "address",
      },
    ],
    name: "AuditorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dust",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintNullifier",
        type: "uint256",
      },
    ],
    name: "alreadyMinted",
    outputs: [
      {
        internalType: "bool",
        name: "isUsed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditorPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOfStandalone",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "blacklistedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "isBlacklisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnVerifier",
    outputs: [
      {
        internalType: "contract IBurnVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256[7]",
        name: "amountPCT",
        type: "uint256[7]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getBalanceFromTokenAddress",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isAuditorKeySet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConverter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintVerifier",
    outputs: [
      {
        internalType: "contract IMintVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[19]",
            name: "publicSignals",
            type: "uint256[19]",
          },
        ],
        internalType: "struct BurnProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "privateBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[24]",
            name: "publicSignals",
            type: "uint256[24]",
          },
        ],
        internalType: "struct MintProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "privateMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrar",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "setAuditorPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "blacklisted",
        type: "bool",
      },
    ],
    name: "setTokenBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[32]",
            name: "publicSignals",
            type: "uint256[32]",
          },
        ],
        internalType: "struct TransferProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferVerifier",
    outputs: [
      {
        internalType: "contract ITransferVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[16]",
            name: "publicSignals",
            type: "uint256[16]",
          },
        ],
        internalType: "struct WithdrawProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawVerifier",
    outputs: [
      {
        internalType: "contract IWithdrawVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "$3599097dbd61087c0ceb2349e224575c52$__6304068d3a60405180604001604052808560006002811061224e5761224e613978565b602002015181526020018560016002811061226b5761226b613978565b602090810291909101519091526040516001600160e01b031960e085901b16815282516004820152910151602482015260448101869052606401608060405180830381865af41580156122c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e69190613d4d565b6001600160a01b038b166000908152600860209081526040808320898452909152902080549192509015801561231e57506001810154155b1561234b578151805182556020908101516001830155808301518051600284015501516003820155612461565b8151604051637bb10bcb60e01b815273__$3599097dbd61087c0ceb2349e224575c52$__91637bb10bcb91612384918591600401613d8e565b6040805180830381865af41580156123a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c49190613db7565b805182556020908101516001830155820151604051637bb10bcb60e01b815273__$3599097dbd61087c0ceb2349e224575c52$__91637bb10bcb91612410916002860191600401613d8e565b6040805180830381865af415801561242c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124509190613db7565b805160028301556020015160038201555b604080518082019091528881526006820154602080830191909152600e8301805460018101825560009182529190208251600890920201906124a6908290600761313d565b50602091909101516007909101556006810180549060006124c683613dd3565b91905055506124d58b8761294b565b50505050505b94509492505050565b6040516001600160a01b03838116602483015260448201839052611dd491859182169063a9059cbb90606401611fb6565b6000838152600560205260409020546001600160a01b03168061254b57604051638698bf3760e01b815260040160405180910390fd5b6040805160808082018352606086810151838501908152878301519184019190915282528251808401845260a0870151815260c08701516020828101919091528084019190915283518085018552818801518152878501519181019182528451630203469d60e11b81529051600482015290516024820152604481018990529251919260009273__$3599097dbd61087c0ceb2349e224575c52$__926304068d3a92606480820193918290030181865af415801561260d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126319190613d4d565b90506126408887848488612655565b505061264d868683612a41565b505050505050565b6000612662868686612bae565b905061264d8686858585612bf8565b6001600160a01b0384166000908152600860209081526040808320868452909152902080541580156126a557506001810154155b156126d25782518051825560209081015160018301558084015180516002840155015160038201556127e8565b8251604051637bb10bcb60e01b815273__$3599097dbd61087c0ceb2349e224575c52$__91637bb10bcb9161270b918591600401613d8e565b6040805180830381865af4158015612727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061274b9190613db7565b805182556020908101516001830155830151604051637bb10bcb60e01b815273__$3599097dbd61087c0ceb2349e224575c52$__91637bb10bcb91612797916002860191600401613d8e565b6040805180830381865af41580156127b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d79190613db7565b805160028301556020015160038201555b6127f3858584612d4f565b5050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080602060008451602086016000885af18061286d576040513d6000823e3d81fd5b50506000513d91508115612885578060011415612892565b6001600160a01b0384163b155b156108b957604051635274afe760e01b81526001600160a01b0385166004820152602401610975565b600280546001600160a01b03831660008181526004602090815260408083208590558483526005909152812080546001600160a01b03199081168417909155600680546001810182559083527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054909116909217909155825491929061294283613dd3565b91905055505050565b6001600160a01b03821660009081526008602090815260408083208484528252808320600581015482516080810184528254818501908152600184015460608301528152835180850190945260028301548452600383015484860152938401929092529290916129ba90612e95565b604080516020810183905290810184905290915060600160408051808303601f190181528282528051602091820120838301835260068701805485526001838601818152600084815260048b0190955294842095518655935194909301805460ff1916941515949094179093558154929350612a3583613dd3565b91905055505050505050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aa59190613b9d565b60ff169050600083905060007f000000000000000000000000000000000000000000000000000000000000000060ff16831115612b2757612b0960ff7f00000000000000000000000000000000000000000000000000000000000000001684613ae3565b612b1490600a613dec565b9050612b208186613d05565b9150612b99565b7f000000000000000000000000000000000000000000000000000000000000000060ff16831015612b9957612b7f8360ff7f000000000000000000000000000000000000000000000000000000000000000016613ae3565b612b8a90600a613dec565b9050612b968186613cdd565b91505b83612ba58188856124e4565b50505050505050565b600080612bba83612e95565b9050600080612bca878785612ee9565b9150915081612bec576040516309bde33960e01b815260040160405180910390fd5b925050505b9392505050565b6001600160a01b038516600090815260086020908152604080832087845290915290819020845191516327d3c56d60e11b8152909173__$3599097dbd61087c0ceb2349e224575c52$__91634fa78ada91612c5891859190600401613d8e565b6040805180830381865af4158015612c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c989190613db7565b8051825560209081015160018301558401516040516327d3c56d60e11b815273__$3599097dbd61087c0ceb2349e224575c52$__91634fa78ada91612ce4916002860191600401613d8e565b6040805180830381865af4158015612d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d249190613db7565b80516002830155602001516003820155612d3f868684612f56565b612ba5600780830190859061313d565b6001600160a01b0383166000908152600860209081526040808320858452825280832060058101548251608081018452825481850190815260018401546060830152815283518085019094526002830154845260038301548486015293840192909252929091612dbe90612e95565b604080516020810183905290810184905290915060600160408051808303601f190181528282528051602091820120838301835260068701805485526001838601818152600084815260048b018652868120975188559051968201805460ff1916971515979097179096558451808601909552898552905484840152600e88018054918201815585529190932082519394509192600890910290910190612e68908290600761313d565b5060209190910151600790910155600683018054906000612e8883613dd3565b9190505550505050505050565b80518051602091820151828401518051908401516040805195860194909452928401919091526060830152608082015260009060a00160408051601f19818403018152919052805160209091012092915050565b6001600160a01b03831660009081526008602090815260408083208584528252808320600581015482518085018790528084019190915282518082038401815260609091018352805190840120845260040190915290206001810154905460ff909116905b935093915050565b6001600160a01b03831660009081526008602090815260408083208584529091529020600e8101545b801561307f576000612f92600183613ae3565b90508383600e018281548110612faa57612faa613978565b9060005260206000209060080201600701541161306c57600e83018054612fd390600190613ae3565b81548110612fe357612fe3613978565b906000526020600020906008020183600e01828154811061300657613006613978565b600091825260209091206008909102016130228183600761317b565b50600791820154910155600e830180548061303f5761303f613df8565b6000828152602081206000199092019160088302019061305f82826131a6565b6007820160009055505090555b508061307781613e0e565b915050612f7f565b5060058101805490600061309283613dd3565b91905055506108b9848461294b565b604080516080810182526000918101828152606082019290925290819081526020016130e0604051806040016040528060008152602001600081525090565b905290565b6040518060e001604052806007906020820280368337509192915050565b60405180608001604052806131166130a1565b81526020016131236130a1565b81526020016131306130a1565b81526020016130e06130e5565b826007810192821561316b579160200282015b8281111561316b578251825591602001919060010190613150565b506131779291506131b1565b5090565b826007810192821561316b579182015b8281111561316b57825482559160010191906001019061318b565b506112159060078101905b5b8082111561317757600081556001016131b2565b80356001600160a01b03811681146131dd57600080fd5b919050565b600080604083850312156131f557600080fd5b6131fe836131c6565b946020939093013593505050565b61322182825180518252602090810151910152565b602090810151805160408401520151606090910152565b8060005b60078110156108b957815184526020938401939091019060010161323c565b60006101c0820161326c838961320c565b608083018790526101c060a084015285519081905260208601906101e084019060005b818110156132e057835180518460005b60078110156132be57825182526020928301929091019060010161329f565b50505060209081015160e085015293909301926101009092019160010161328f565b505080925050506132f460c0830185613238565b826101a08301529695505050505050565b602081526000825180602084015260005b818110156133335760208186018101516040868401015201613316565b506000604082850101526040601f19601f83011684010191505092915050565b60006020828403121561336557600080fd5b612bf1826131c6565b6000806040838503121561338157600080fd5b61338a836131c6565b9150613398602084016131c6565b90509250929050565b801515811461121557600080fd5b600080604083850312156133c257600080fd5b6133cb836131c6565b915060208301356133db816133a1565b809150509250929050565b6000808284036104208112156133fb57600080fd5b613404846131c6565b9250610400601f198201121561341957600080fd5b506020830190509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561346057613460613427565b60405290565b6040805190810167ffffffffffffffff8111828210171561346057613460613427565b604051601f8201601f1916810167ffffffffffffffff811182821017156134b2576134b2613427565b604052919050565b600082601f8301126134cb57600080fd5b60006134d76040613489565b90508060408401858111156134eb57600080fd5b845b818110156135055780358352602092830192016134ed565b509195945050505050565b6000610100828403121561352357600080fd5b61352b61343d565b905061353783836134ba565b815282605f83011261354857600080fd5b604061355381613489565b8060c085018681111561356557600080fd5b8386015b8181101561358a5761357b88826134ba565b84526020909301928401613569565b5081602086015261359b87826134ba565b848601525050505092915050565b8060e081018310156135ba57600080fd5b92915050565b6000806000808486036106208112156135d857600080fd5b6135e1866131c6565b9450602086013593506000610500603f19830112156135fe578081fd5b613606613466565b91506136158860408901613510565b82528761015f880112613626578081fd5b8061040061363381613489565b91505080915061054088018981111561364b57600080fd5b61014089015b81811015613669578035845260209384019301613651565b5081602085015283955061367d8a826135a9565b94505050505092959194509250565b60006020828403121561369e57600080fd5b5035919050565b600082601f8301126136b657600080fd5b60006136c260e0613489565b90508060e08401858111156134eb57600080fd5b600080600061012084860312156136ec57600080fd5b833592506136fc602085016131c6565b915061370b85604086016136a5565b90509250925092565b600080600083850361040081121561372b57600080fd5b843593506000610300601f1983011215613743578081fd5b61374b613466565b915061375a8760208801613510565b82528661013f87011261376b578081fd5b8061020061377881613489565b91505080915061032087018881111561379057600080fd5b61012088015b818110156137ae578035845260209384019301613796565b508160208501528395506137c289826136a5565b9450505050509250925092565b602080825282518282018190526000918401906040840190835b818110156138105783516001600160a01b03168352602093840193909201916001016137e9565b509095945050505050565b60c08101613829828661320c565b608082019390935260a00152919050565b60008082840361044081121561384f57600080fd5b61036081121561385e57600080fd5b508291506133988461036085016135a9565b600181811c9082168061388457607f821691505b602082108103611f3f57634e487b7160e01b600052602260045260246000fd5b6000602082840312156138b657600080fd5b8151612bf1816133a1565b6000604082840312156138d357600080fd5b82601f8301126138e257600080fd5b6138ec6040613489565b8060408401858111156138fe57600080fd5b845b81811015613810578051845260209384019301613900565b6020808252601a908201527f41756469746f72207075626c6963206b6579206e6f7420736574000000000000604082015260600190565b6020808252600f908201526e105d591a5d1bdc881b9bdd081cd95d608a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8060005b60028110156108b95760408285376040938401939190910190600101613992565b610400810160408683376139ca604083018661398e565b60408460c08401376103008361010084013795945050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156135ba576135ba6139e5565b60e081016135ba8284613238565b8060005b60028110156108b9578151845260209384019390910190600101613a20565b8060005b60028110156108b957613a57848351613a1c565b6040939093019260209190910190600101613a43565b6105008101613a7c8287613a1c565b613a896040830186613a3f565b613a9660c0830185613a1c565b61010082018360005b6020811015613abe578151835260209283019290910190600101613a9f565b50505095945050505050565b600060208284031215613adc57600080fd5b5051919050565b818103818111156135ba576135ba6139e5565b6103008101613b058287613a1c565b613b126040830186613a3f565b613b1f60c0830185613a1c565b61010082018360005b6010811015613abe578151835260209283019290910190600101613b28565b838152602081018390526101208101613b636040830184613238565b949350505050565b61036081016040868337613b82604083018661398e565b60408460c08401376102608361010084013795945050505050565b600060208284031215613baf57600080fd5b815160ff81168114612bf157600080fd5b60ff82811682821603908111156135ba576135ba6139e5565b6001815b6001841115612f4e57808504811115613bf857613bf86139e5565b6001841615613c0657908102905b60019390931c928002613bdd565b600082613c23575060016135ba565b81613c30575060006135ba565b8160018114613c465760028114613c5057613c6c565b60019150506135ba565b60ff841115613c6157613c616139e5565b50506001821b6135ba565b5060208310610133831016604e8410600b8410161715613c8f575081810a6135ba565b613c9c6000198484613bd9565b8060001904821115613cb057613cb06139e5565b029392505050565b6000612bf160ff841683613c14565b634e487b7160e01b600052601260045260246000fd5b600082613cec57613cec613cc7565b500490565b600082613d0057613d00613cc7565b500690565b80820281158282048414176135ba576135ba6139e5565b600060408284031215613d2e57600080fd5b613d36613466565b825181526020928301519281019290925250919050565b60006080828403128015613d6057600080fd5b50613d69613466565b613d738484613d1c565b8152613d828460408501613d1c565b60208201529392505050565b825481526001830154602082015260808101612bf1604083018480518252602090810151910152565b600060408284031215613dc957600080fd5b612bf18383613d1c565b600060018201613de557613de56139e5565b5060010190565b6000612bf18383613c14565b634e487b7160e01b600052603160045260246000fd5b600081613e1d57613e1d6139e5565b50600019019056fea2646970667358221220cfeee6e8aea118687c3c8b487dd6b30936a0edc1a28f421d1d6264ad51787ea064736f6c634300081b0033";

type EncryptedERCConstructorParams =
  | [linkLibraryAddresses: EncryptedERCLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncryptedERCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class EncryptedERC__factory extends ContractFactory {
  constructor(...args: EncryptedERCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        EncryptedERC__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: EncryptedERCLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3599097dbd61087c0ceb2349e224575c52\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/BabyJubJub.sol:BabyJubJub"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    params: CreateEncryptedERCParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(params, overrides || {});
  }
  override deploy(
    params: CreateEncryptedERCParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(params, overrides || {}) as Promise<
      EncryptedERC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EncryptedERC__factory {
    return super.connect(runner) as EncryptedERC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncryptedERCInterface {
    return new Interface(_abi) as EncryptedERCInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EncryptedERC {
    return new Contract(address, _abi, runner) as unknown as EncryptedERC;
  }
}

export interface EncryptedERCLibraryAddresses {
  ["contracts/libraries/BabyJubJub.sol:BabyJubJub"]: string;
}
